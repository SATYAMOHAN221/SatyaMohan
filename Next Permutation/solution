#include <iostream>
#include <vector>
#include <algorithm>

void nextPermutation(std::vector<int>& nums) {
    int n = nums.size();
    
    // Step 1: Find the first element that is smaller than its next element
    int i = n - 2;
    while (i >= 0 && nums[i] >= nums[i + 1]) {
        i--;
    }
    
    if (i >= 0) {
        // Step 2: Find the smallest element greater than nums[i] from the right side
        int j = n - 1;
        while (nums[j] <= nums[i]) {
            j--;
        }
        
        // Step 3: Swap nums[i] and nums[j]
        std::swap(nums[i], nums[j]);
    }
    
    // Step 4: Reverse the elements from i+1 to the end of the array
    std::reverse(nums.begin() + i + 1, nums.end());
}

int main() {
    std::vector<int> nums = {1, 2, 3};
    nextPermutation(nums);
    
    // Print the next permutation
    for (int num : nums) {
        std::cout << num << " ";
    }
    return 0;
}
